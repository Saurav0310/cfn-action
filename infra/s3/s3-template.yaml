AWSTemplateFormatVersion: '2010-09-09'
Description: >
  End-to-End Secure Data Lake S3 Bucket Stack
  - Creates an encrypted, versioned, lifecycle-managed S3 bucket.
  - Enforces TLS-only access.
  - Supports custom KMS key or GBTS keychain integration.
  - Exports outputs for downstream stacks (e.g. Glue, Athena, EMR).

Metadata:
  Repository: https://pramerica-.com/projects/repos/deployer-patterns/browse

Parameters:
  EnvironmentName:
    Type: String
    Description: Environment name (e.g. dev, stg, prod)

  BucketName:
    Type: String
    Description: Optional â€” specify bucket name, or leave blank for auto-generation.
    Default: ""

  S3ObjectVersioning:
    Type: String
    Description: Enable or suspend versioning.
    AllowedValues: [Enabled, Suspended]
    Default: Enabled

  LifecyclePolicy:
    Type: String
    Description: Apply lifecycle rules for intelligent tiering and archival.
    AllowedValues: [Enabled, Disabled]
    Default: Enabled

  VersionedObjectExpiration:
    Type: Number
    Description: Number of days before old versioned objects expire.
    Default: 65

  CustomKmsKey:
    Type: String
    Description: ARN for a custom KMS CMK for encryption.
    Default: ""

  GBTSKeychain:
    Type: String
    Description: Use GBTS keychain for encryption.
    AllowedValues: [Enabled, Disabled]
    Default: Disabled

Conditions:
  NameBucket: !Not [!Equals [!Ref BucketName, ""]]
  ProvideCK: !Not [!Equals [!Ref CustomKmsKey, ""]]
  UseGBTSKeychain: !Equals [!Ref GBTSKeychain, "Enabled"]
  VersionedLifecycle: !And
    - !Equals [!Ref S3ObjectVersioning, "Enabled"]
    - !Equals [!Ref LifecyclePolicy, "Enabled"]
  NonVersionedLifecycle: !And
    - !Equals [!Ref S3ObjectVersioning, "Suspended"]
    - !Equals [!Ref LifecyclePolicy, "Enabled"]

Resources:
  # -------------------------------
  # Main S3 Data Lake Bucket
  # -------------------------------
  DataLakeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !If [NameBucket, !Ref BucketName, !Sub "datalake-${EnvironmentName}-${AWS::AccountId}"]
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: !Ref S3ObjectVersioning
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !If
                - ProvideCK
                - !Ref CustomKmsKey
                - !If
                  - UseGBTSKeychain
                  - !ImportValue gbtskeychain
                  - !Ref "AWS::NoValue"
      LifecycleConfiguration:
        Rules: !If
          - VersionedLifecycle
          - 
            - Id: VersionedObjectRule
              Status: Enabled
              ExpirationInDays: !Ref VersionedObjectExpiration
              NoncurrentVersionTransitions:
                - NoncurrentDays: 30
                  StorageClass: STANDARD_IA
                - NoncurrentDays: 60
                  StorageClass: GLACIER_IR
              AbortIncompleteMultipartUpload:
                DaysAfterInitiation: 7
          - !If
            - NonVersionedLifecycle
            - 
              - Id: StandardObjectRule
                Status: Enabled
                Transitions:
                  - TransitionInDays: 15
                    StorageClass: INTELLIGENT_TIERING
                AbortIncompleteMultipartUpload:
                  DaysAfterInitiation: 7
            - !Ref "AWS::NoValue"

  # -------------------------------
  # Enforce HTTPS / TLS-only Access
  # -------------------------------
  DataLakeBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DataLakeBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: EnforceTLS
            Effect: Deny
            Principal: "*"
            Action: s3:*
            Resource:
              - !GetAtt DataLakeBucket.Arn
              - !Sub "${DataLakeBucket.Arn}/*"
            Condition:
              Bool:
                aws:SecureTransport: false

Outputs:
  # -------------------------------
  # Exported Outputs (for other stacks)
  # -------------------------------
  S3BucketName:
    Description: Name of the created S3 bucket
    Value: !Ref DataLakeBucket
    Export:
      Name: !Sub "${AWS::StackName}-S3BucketName"

  S3BucketArn:
    Description: ARN of the created S3 bucket
    Value: !GetAtt DataLakeBucket.Arn
    Export:
      Name: !Sub "${AWS::StackName}-S3BucketArn"

  StackName:
    Description: CloudFormation stack name
    Value: !Ref AWS::StackName
