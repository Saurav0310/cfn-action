name: Deploy Athena Stack

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        default: "dev"
        type: choice
        options: [dev, stg, prod]
      action:
        description: "Deploy or destroy"
        required: true
        default: "deploy"
        type: choice
        options: [deploy, destroy]

  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      action:
        required: true
        type: string

jobs:
  athena:
    runs-on: aws

    steps:
      - uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "ENV=${{ inputs.environment }}" >> $GITHUB_ENV
          echo "STACK_NAME=athena-${{ inputs.environment }}" >> $GITHUB_ENV
          echo "TEMPLATE_PATH=infra/athena/Athena.yaml" >> $GITHUB_ENV
          echo "PARAM_FILE=parameters/athena-${{ inputs.environment }}.json" >> $GITHUB_ENV

      - name: Verify AWS identity
        run: aws sts get-caller-identity

      - name: Create or Update / Destroy Stack
        run: |
          if [ "${{ inputs.action }}" == "deploy" ]; then
            if ! aws cloudformation describe-stacks --stack-name "$STACK_NAME" >/dev/null 2>&1; then
              echo "üÜï Creating new stack $STACK_NAME"
              aws cloudformation create-stack \
                --stack-name "$STACK_NAME" \
                --template-body file://"$TEMPLATE_PATH" \
                --parameters file://"$PARAM_FILE" \
                --capabilities CAPABILITY_NAMED_IAM
              aws cloudformation wait stack-create-complete --stack-name "$STACK_NAME"
              echo "‚úÖ Stack $STACK_NAME created successfully."
            else
              echo "üîÑ Updating existing stack $STACK_NAME"
              set +e
              aws cloudformation update-stack \
                --stack-name "$STACK_NAME" \
                --template-body file://"$TEMPLATE_PATH" \
                --parameters file://"$PARAM_FILE" \
                --capabilities CAPABILITY_NAMED_IAM
              STATUS=$?
              set -e
              if [ $STATUS -ne 0 ]; then
                echo "‚ö†Ô∏è No updates needed for $STACK_NAME"
              else
                aws cloudformation wait stack-update-complete --stack-name "$STACK_NAME"
                echo "‚úÖ Stack $STACK_NAME updated successfully."
              fi
            fi
          else
            echo "üß® Deleting stack $STACK_NAME"
            aws cloudformation delete-stack --stack-name "$STACK_NAME"
            aws cloudformation wait stack-delete-complete --stack-name "$STACK_NAME"
